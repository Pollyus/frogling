import React, { useState, useRef, useEffect } from 'react'; 
import Slider from 'react-slick';
import 'slick-carousel/slick/slick.css';
import 'slick-carousel/slick/slick-theme.css';
import TrainerDescription from './TrainerDescription';
import './TrainersCarousel.css'; // –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª TrainersCarousel.css
import trainer1Image from './TrainersPhoto/Vlad.png';
import trainer2Image from './TrainersPhoto/Lidia.png';
import trainer3Image from './TrainersPhoto/Lyubov.png';


const trainers = [
  {
    id: 1,
    name: '–í–ª–∞–¥–∏—Å–ª–∞–≤',
    photo: trainer1Image, // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏
    schedule: '\t–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: 15:00-21:00\n\t–°—Ä–µ–¥–∞: 9:00-14:30\n\t–ü—è—Ç–Ω–∏—Ü–∞: 15:00-21:00\n\t–°—É–±–±–æ—Ç–∞: 9:00-14:30\n–í–æ—Å–∫—Ä–µ—Å–µ–Ω–∏–µ: 9:00-14:30',
    description: [
              { label: '–û–ø—ã—Ç', value: '3 –≥–æ–¥–∞'},
              { label: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', value: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –≥—Ä—É–¥–Ω–∏—á–∫–æ–≤–æ–≥–æ –∏ –º–∞–ª—ã—à–∫–æ–≤–æ–≥–æ –ø–ª–∞–≤–∞–Ω–∏—è'},
              { label: '–†–∞–∑—Ä—è–¥', value: '–ö–∞–Ω–¥–∏–¥–∞—Ç –º–∞—Å—Ç–µ—Ä–∞ —Å–ø–æ—Ä—Ç–∞ –ø–æ –ø–ª–∞–≤–∞–Ω–∏—é'},
              { label: '–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—å–µ—Ä–∞', value: '12 –ª–µ—Ç —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –∫–∞—Ä—å–µ—Ä—ã, —É—á–∞—Å—Ç–Ω–∏–∫ –≤—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π'},
              { label: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', value: '–ü–ì–£–§–ö–°–∏–¢, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–Ω–µ—Ä –ø–æ –ø–ª–∞–≤–∞–Ω–∏—é'}
       ]
    
  },
  {
    id: 2,
    name: '–õ–∏–¥–∏—è',
    photo: trainer2Image,
    schedule: '\t–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: 9:00-14:30\n\t–í—Ç–æ—Ä–Ω–∏–∫: 9:00-14:30\n\t–ß–µ—Ç–≤–µ—Ä–≥: 9:00-14:30\n\t–ü—è—Ç–Ω–∏—Ü–∞: 15:00-21:00',
    description: [
              { label: '–û–ø—ã—Ç', value: '1,5 –≥–æ–¥–∞'},
              { label: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', value: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –≥—Ä—É–¥–Ω–∏—á–∫–æ–≤–æ–≥–æ –∏ –º–∞–ª—ã—à–∫–æ–≤–æ–≥–æ –ø–ª–∞–≤–∞–Ω–∏—è. –î–µ—Ç—Å–∫–∏–π –º–∞—Å—Å–∞–∂–∏—Å—Ç/–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –¥–µ—Ç—Å–∫–æ–≥–æ –º–∞—Å—Å–∞–∂–∞ –∏ –º–æ—Ç–æ—Ä–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è'},
              { label: '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è', value: '–§–∏–∑–∏—á–µ—Å–∫–∞—è —Ç–µ—Ä–∞–ø–∏–∏ –¥–µ—Ç–µ–π –∏ –≤–∑—Ä–æ—Å–ª—ã—Ö'},
              { label: '–ö–∞—Ä—å–µ—Ä–∞', value: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π —Ç–µ—Ä–∞–ø–∏–∏ –¥–µ—Ç–µ–π –∏ –≤–∑—Ä–æ—Å–ª—ã—Ö'},
              { label: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', value: '–ö–ì–ú–£ –°–µ—Å—Ç—Ä–∏–Ω—Å–∫–æ–µ –¥–µ–ª–æ'}
       ]
  },
  {
    id: 3,
    name: '–õ—é–±–æ–≤—å',
    photo: trainer3Image,
    schedule: '\t–í—Ç–æ—Ä–Ω–∏–∫: 15:00-21:00\n\t–ß–µ—Ç–≤–µ—Ä–≥: 15:00-21:00\n\t–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: 15:00-21:00',
    description: [
              { label: '–û–ø—ã—Ç', value: '2 –≥–æ–¥–∞'},
              { label: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', value: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –≥—Ä—É–¥–Ω–∏—á–∫–æ–≤–æ–≥–æ –∏ –º–∞–ª—ã—à–∫–æ–≤–æ–≥–æ –ø–ª–∞–≤–∞–Ω–∏—è. –ú–∞—Å—Å–∞–∂–∏—Å—Ç —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –∏ –¥–µ—Ç—Å–∫–æ–≥–æ –º–∞—Å—Å–∞–∂–∞'},
              { label: '–ó–≤–∞–Ω–∏–µ', value: '–ú–∞—Å—Ç–µ—Ä —Å–ø–æ—Ä—Ç–∞ –ø–æ –ø–ª–∞–≤–∞–Ω–∏—é'},
              { label: '–ö–∞—Ä—å–µ—Ä–∞', value: '12 –ª–µ—Ç —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –∫–∞—Ä—å–µ—Ä—ã'},
              { label: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', value: '–ü–ì–£–§–ö–°–∏–¢, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–Ω–µ—Ä –ø–æ –ø–ª–∞–≤–∞–Ω–∏—é'}
       ]
  },

];

function TrainersCarousel() {
  const [currentSlide, setCurrentSlide] = useState(0);  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ª–∞–π–¥–∞
  const [selectedTrainer, setSelectedTrainer] = useState(trainers[0] || null); // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤—ã–±—Ä–∞–Ω –ø–µ—Ä–≤—ã–π —Ç—Ä–µ–Ω–µ—Ä
  const [isPaused, setIsPaused] = useState(false); // –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–∞—É–∑—ã
  const [zoomedTrainerId, setZoomedTrainerId] = useState(null); // –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  const [isButtonClicked, setIsButtonClicked] = useState(false);

  const sliderRef = useRef(null); // –î–æ–±–∞–≤–ª–µ–Ω useRef –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–ª–∞–π–¥–µ—Ä—É
  
  useEffect(() => {
      if (sliderRef.current) {
        if (isPaused) {
          sliderRef.current.slickPause();
        } else {
          sliderRef.current.slickPlay();
        }
      }
    }, [isPaused]);

  const handleBeforeChange = (oldIndex, newIndex) => {
        setCurrentSlide(newIndex);
        if (!isPaused) {
          setSelectedTrainer(trainers[newIndex] || null);
          setZoomedTrainerId(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–∏ —Å–º–µ–Ω–µ —Å–ª–∞–π–¥–∞
          setIsButtonClicked(false); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        }
          
      };

  const handleTrainerClick = (trainer) => {
    // –°–Ω–∞—á–∞–ª–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö
    if (zoomedTrainerId !== trainer.id) {
      setZoomedTrainerId(trainer.id); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ID –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è
      setIsButtonClicked(true);
      
    } else {
      setZoomedTrainerId(null); // –£–±–∏—Ä–∞–µ–º —É–≤–µ–ª–∏—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–ª–∏–∫–Ω—É–ª–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ
      setIsButtonClicked(false);
    }
    setSelectedTrainer(trainer);
    setIsPaused(true);

    setTimeout(() => {
      setSelectedTrainer(trainers[0] || null);
      setIsPaused(false);
      setZoomedTrainerId(null);
      setIsButtonClicked(false);
    }, 120000);
  };


  const settings = {
    dots: true,
    infinite: true,
    speed: 500,
    slidesToShow: 3, // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö —Å–ª–∞–π–¥–æ–≤
    slidesToScroll: 1,
    autoplay: !isPaused, // –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –Ω–∞ –ø–∞—É–∑–µ
    autoplaySpeed: 3000, // –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —Å–ª–∞–π–¥–∞–º–∏ (–º—Å)
    centerMode: true, // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ä–µ–∂–∏–º —Ü–µ–Ω—Ç—Ä–æ–≤–æ–≥–æ —Å–ª–∞–π–¥–∞
    centerPadding: '60px', // –û—Ç—Å—Ç—É–ø –¥–ª—è —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Å–µ–¥–Ω–∏—Ö —Å–ª–∞–π–¥–æ–≤ (–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å)
    // –î–æ–±–∞–≤–∏–º —Å—Ç—Ä–µ–ª–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    beforeChange: handleBeforeChange,
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 1,
          infinite: true,
          dots: true
        }
      },
      {
        breakpoint: 768, // –î–æ–±–∞–≤–ª–µ–Ω breakpoint –¥–ª—è –ø–ª–∞–Ω—à–µ—Ç–æ–≤
        settings: {
          slidesToShow: 1, // –ù–∞ –ø–ª–∞–Ω—à–µ—Ç–∞—Ö 1 —Å–ª–∞–π–¥ –≤ —Ü–µ–Ω—Ç—Ä–µ
          slidesToScroll: 1,
          centerMode: true,
          centerPadding: '80px', // –£–≤–µ–ª–∏—á—å—Ç–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –æ—Ç—Å—Ç—É–ø–∞
          autoplay: true,
          autoplaySpeed: 3000,
        }
      },
      {
        breakpoint: 600,
        settings: {
          slidesToShow: 2,
          slidesToScroll: 1,
          initialSlide: 2
        }
      },
      {
        breakpoint: 480,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1
        }
      }
    ]
  };


    return (
        <section className="trainers-carousel"> {/* –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ section –¥–ª—è —Å–µ–º–∞–Ω—Ç–∏–∫–∏ */}
        <h2 className="trainers-carousel__title">–ù–∞—à–∏ –¢—Ä–µ–Ω–µ—Ä—ã</h2>
        <div className="trainers-carousel__slider-container"> {/* –î–æ–±–∞–≤–ª–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞ */}
            {/* <Slider {...settings} ref={sliderRef}> */}
            {trainers.map((trainer) => (
                
                <div key={trainer.id} className="trainer-slide" onClick={() => handleTrainerClick(trainer)}>
                <img
                  src={trainer.photo}
                  alt={trainer.name}
                  className={`trainer-slide__image ${zoomedTrainerId === trainer.id ? 'zoomed' : ''} ${isButtonClicked && zoomedTrainerId === trainer.id ? 'slick-center' : ''}`}
                />

                <p className="trainer-slide__name">{trainer.name}</p>
                </div>
            ))}
            {/* </Slider> */}
        </div>

         {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç—Ä–µ–Ω–µ—Ä–µ */}
      {selectedTrainer && (
        <div className="trainer-info">
          {/* <h3>üìå–¢–†–ï–ù–ï–†: {selectedTrainer.name}</h3> */}
          
          <div className="trainer-info__container">
            <div className="trainer-info__schedule">
              <h4>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: </h4>
              <p>
                {selectedTrainer.schedule.split('\n').map((item, key) => (
                  <React.Fragment key={key}>
                    {item}
                    <br />
                  </React.Fragment>
                ))}
              </p>
            </div>
            <div className="trainer-info__description">
              <h4>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h4>
              <TrainerDescription description={selectedTrainer.description} />
            </div>
          </div>
        </div>
      )}

        </section>
    );
}

export default TrainersCarousel;